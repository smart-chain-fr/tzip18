{ parameter
    (or (pair %callContract (string %entrypoint_name) (bytes %payload))
        (list %updateEntrypoints
           (pair (pair (option %entrypoint (pair (pair (address %addr) (bool %is_view)) (string %parameters)))
                       (bool %is_removed))
                 (string %name)))) ;
  storage
    (pair (pair (big_map %entrypoints
                   string
                   (pair (pair (address %addr) (bool %is_view)) (string %parameters)))
                (address %governance_proxy))
          (pair %token_metadata (nat %token_id) (map %token_info string bytes))) ;
  code { UNPAIR ;
         IF_LEFT
           { AMOUNT ;
             DUP 3 ;
             CAR ;
             CAR ;
             DUP 3 ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "NO_ENTRYPOINT_FOUND" ; FAILWITH } {} ;
             CAR ;
             CAR ;
             CONTRACT bytes ;
             IF_NONE { PUSH string "NO_ENTRYPOINT_FOUND" ; FAILWITH } {} ;
             SWAP ;
             DIG 2 ;
             CDR ;
             TRANSFER_TOKENS ;
             SWAP ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR }
           { PUSH string "PERMISSIONS_DENIED" ;
             DUP 3 ;
             CAR ;
             CDR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             SWAP ;
             PAIR ;
             LEFT (big_map string (pair (pair address bool) string)) ;
             LOOP_LEFT
               { UNPAIR ;
                 IF_CONS
                   { DUP ;
                     CAR ;
                     CAR ;
                     IF_NONE
                       { DUP ;
                         CAR ;
                         CDR ;
                         IF { DIG 2 ; SWAP ; CDR ; NONE (pair (pair address bool) string) ; SWAP ; UPDATE }
                            { DROP ; SWAP } }
                       { DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         NOT ;
                         IF { DUP ;
                              CAR ;
                              CAR ;
                              IF_NONE { DROP ; SWAP } { DIG 3 ; SWAP ; SOME ; DIG 2 ; CDR ; UPDATE } }
                            { DROP ; SWAP } } ;
                     SWAP ;
                     PAIR ;
                     LEFT (big_map string (pair (pair address bool) string)) }
                   { RIGHT
                       (pair (list (pair (pair (option (pair (pair address bool) string)) bool) string))
                             (big_map string (pair (pair address bool) string))) } } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } } }

