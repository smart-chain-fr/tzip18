{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %get_allowance
                   (contract %callback nat)
                   (pair %request (address %owner) (address %spender))))
            (or (pair %get_balance (contract %callback nat) (address %owner))
                (pair %get_total_supply (contract %callback nat) (unit %request))))
        (pair %transfer (pair (address %address_from) (address %address_to)) (nat %value))) ;
  storage
    (pair (pair (pair (big_map %allowances (pair (address %owner) (address %spender)) nat)
                      (big_map %ledger address nat))
                (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                      (nat %total_supply)))
          (pair %tzip18
             (pair (pair (option %contract_next address) (address %contract_old))
                   (pair (bool %is_in_use) (address %master_proxy)))
             (pair (pair (nat %version_current) (option %version_next nat))
                   (option %version_old nat)))) ;
  code { LAMBDA
           nat
           (option nat)
           { PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; NONE nat } { SOME } } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     PAIR ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     PUSH nat 0 ;
                     DUP 4 ;
                     DUP 4 ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     COMPARE ;
                     GT ;
                     AND ;
                     IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH } {} ;
                     SWAP ;
                     DIG 2 ;
                     CDR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     UPDATE ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL operation ;
                     DUP 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 5 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL operation ;
                     DIG 2 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             DUP 3 ;
             CAR ;
             CAR ;
             CDR ;
             DUP 3 ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { SWAP }
                { SENDER ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  DUP 4 ;
                  CDR ;
                  DUP 4 ;
                  DUP 3 ;
                  GET ;
                  IF_NONE { PUSH nat 0 } {} ;
                  SUB ;
                  ISNAT ;
                  IF_NONE { PUSH string "NotEnoughAllowance" ; FAILWITH } {} ;
                  DIG 3 ;
                  SWAP ;
                  DUP 7 ;
                  SWAP ;
                  EXEC ;
                  DIG 2 ;
                  UPDATE } ;
             DUP 3 ;
             CDR ;
             DUP 3 ;
             DUP 5 ;
             CAR ;
             CAR ;
             GET ;
             IF_NONE { PUSH nat 0 } {} ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
             DIG 2 ;
             SWAP ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DUP 4 ;
             CAR ;
             CAR ;
             UPDATE ;
             DUP 3 ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP 5 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH nat 0 } {} ;
             ADD ;
             DUP 5 ;
             CDR ;
             DUP 6 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DIG 3 ;
             SOME ;
             DIG 5 ;
             CAR ;
             CDR ;
             UPDATE ;
             DIG 4 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR } } }

